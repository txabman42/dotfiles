#!/bin/bash
#
#  Description:  This file holds bash prompt configuration settings
#
  [ -f /usr/local/etc/bash_completion ] && . /usr/local/etc/bash_completion

    # if .git-prompt.sh exists, set options and execute it
    if [[ -f ~/.git-prompt.sh ]]; then
      GIT_PS1_SHOWDIRTYSTATE=true
      GIT_PS1_SHOWSTASHSTATE=true
      GIT_PS1_SHOWUNTRACKEDFILES=true
      GIT_PS1_SHOWUPSTREAM="auto"
      GIT_PS1_HIDE_IF_PWD_IGNORED=true
      GIT_PS1_SHOWCOLORHINTS=true
      . ~/.git-prompt.sh
    fi

    # Colors
    MAGENTA="\[\033[0;35m\]"
    YELLOW="\[\033[01;33m\]"
    BLUE="\[\033[00;34m\]"
    LIGHT_GRAY="\[\033[0;37m\]"
    CYAN="\[\033[0;36m\]"
    GREEN="\[\033[00;32m\]"
    RED="\[\033[0;31m\]"
    VIOLET='\[\033[00;35m\]'

    function color_my_prompt {
      # local __user="$GREEN\u@\h"
      local __cur_location="$BLUE\W"           # capital 'W': current directory, small 'w': full file path
      local __git_branch_color="$GREEN"
      local __prompt_tail="${GREEN}$ "
      local __user_input_color="$LIGHT_GRAY"
      local __git_branch='$(__git_ps1)';

      # Colour branch name depending on state
      if [[ "$(__git_ps1)" =~ "*" ]]; then     # if repository is dirty
          __git_branch_color="$RED"
      elif [[ "$(__git_ps1)" =~ "$" ]]; then   # if there is something stashed
          __git_branch_color="$YELLOW"
      elif [[ "$(__git_ps1)" =~ "%" ]]; then   # if there are only untracked files
          __git_branch_color="$LIGHT_GRAY"
      elif [[ "$(__git_ps1)" =~ "+" ]]; then   # if there are staged files
          __git_branch_color="$CYAN"
      fi

      # Build PS1 & PS2 (Prompt String)
      PS1="$__cur_location$__git_branch_color$__git_branch $__prompt_tail$__user_input_color "
      # PS1="$__cur_location $__prompt_tail$__user_input_color "
      PS2="| => "
    }

    # configure PROMPT_COMMAND which is executed each time before PS1
    PROMPT_COMMAND=color_my_prompt
